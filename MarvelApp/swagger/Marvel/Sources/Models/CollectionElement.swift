//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CollectionElement: APIModel {

    public var available: Int?

    public var collectionURI: String?

    public var items: [CollectionItem]?

    public var returned: Int?

    public init(available: Int? = nil, collectionURI: String? = nil, items: [CollectionItem]? = nil, returned: Int? = nil) {
        self.available = available
        self.collectionURI = collectionURI
        self.items = items
        self.returned = returned
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        available = try container.decodeIfPresent("available")
        collectionURI = try container.decodeIfPresent("collectionURI")
        items = try container.decodeArrayIfPresent("items")
        returned = try container.decodeIfPresent("returned")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(available, forKey: "available")
        try container.encodeIfPresent(collectionURI, forKey: "collectionURI")
        try container.encodeIfPresent(items, forKey: "items")
        try container.encodeIfPresent(returned, forKey: "returned")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CollectionElement else { return false }
      guard self.available == object.available else { return false }
      guard self.collectionURI == object.collectionURI else { return false }
      guard self.items == object.items else { return false }
      guard self.returned == object.returned else { return false }
      return true
    }

    public static func == (lhs: CollectionElement, rhs: CollectionElement) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
